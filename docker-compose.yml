version: "3.3"

services:
  django:
    build: .
    container_name: django_api_mensageria
    command: ["dockerize", "-wait", "tcp://rabbitmq:5672", "-timeout", "30s", "/app/entrypoint.sh"]
    volumes:
      - .:/app
    ports:
      - 8000:8000
    depends_on:
      - db
      - rabbitmq
    environment:
      - DEBUG=True
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - RABBIT_MQ_HOST=rabbitmq
      - RABBIT_MQ_PORT=5672
      - RABBIT_MQ_USER=guest
      - RABBIT_MQ_PASSWORD=guest

  db:
    image: postgres:13
    container_name: db_api_mensageria
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBIT_MQ_HOST=rabbitmq
      - RABBIT_MQ_PORT=5672
      - RABBIT_MQ_USER=guest
      - RABBIT_MQ_PASSWORD=guest

volumes:
  postgres_data:
